@model List<projet_one.Models.User>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Demandes</title>
</head>
<body>
    <div class="admin-container">
        <div class="admin-header">
            <p class="text-muted mb-0">Gestion des demandes utilisateurs</p>
        </div>

        <div class="admin-card">

        <div id="filtre-date" class="mb-3 d-flex gap-2">
    <label>Du</label>
    <input type="date" id="dateDebut" class="form-control" />
    <label>Au</label>
    <input type="date" id="dateFin" class="form-control" />
</div>

            <div class="table-container">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th scope="col">Nom de l'enseigne</th>
                            <th scope="col">Email</th>
                            <th scope="col">Téléphone</th>
                            <th scope="col" class="text-center">Statut</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var u in Model)
                            {
                                <tr data-date="@u.DateDemande.ToString("yyyy-MM-dd")">
                                    <td>@u.Nom_enseigne</td>
                                    <td>@u.Email</td>
                                    <td>@u.Telephone</td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center align-items-center">
                                            <input type="text" class="form-control form-control-sm statut-input me-2" value="@u.Statut" id="statut-@u.Id" />
                                            <button class="btn btn-sm btn-success" onclick="updateStatut('@u.Id')">Valider</button>
                                        </div>
                                    </td>
                                    
                                </tr>
                            }

                    </tbody>
                </table>
            </div>
        </div>
        
        <div class="d-flex justify-content-between align-items-center mt-3">
            <div class="text-muted small">
                Affichage de @Model.Count éléments
            </div>
<div class="d-flex justify-content-end mt-2">
    <button class="btn btn-primary" onclick="exportTableToExcel()">Exporter vers Excel</button>
</div>

<div class="d-flex justify-content-end mt-2">
    <form asp-controller="Support" asp-action="Deconnexion" method="post">
        <button type="submit" class="btn btn-primary">Déconnexion</button>
    </form>
</div>


</body>
</html>
<script>

function exportTableToExcel() {
    const rows = document.querySelectorAll("table tbody tr");
    let csvContent = "Nom de l'enseigne,Email,Téléphone,Statut\n";

    rows.forEach(row => {
        if(row.style.display !== "none"){ // uniquement les lignes visibles
            const cells = row.querySelectorAll("td");
            const rowData = [
                cells[0].innerText.trim(),
                cells[1].innerText.trim(),
                cells[2].innerText.trim(),
                cells[3].querySelector("input")?.value.trim() || cells[3].innerText.trim()
            ];
            csvContent += rowData.join(",") + "\n";
        }
    });

    // Créer un lien de téléchargement
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.setAttribute("href", url);
    link.setAttribute("download", "demandes_utilisateurs.csv");
    link.style.display = "none";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}


    async function updateStatut(userId) {
        const input = document.getElementById("statut-" + userId);
        const nouveauStatut = input.value;

        const response = await fetch('/Support/UpdateStatut?id=' + userId, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(nouveauStatut)
        });

        if (response.ok) {
            alert("Statut mis à jour !");
        } else {
            alert("Erreur lors de la mise à jour");
        }
    }

    const dateDebut = document.getElementById("dateDebut");
    const dateFin = document.getElementById("dateFin");

    function filtrerDates() {
        const debut = dateDebut.value ? new Date(dateDebut.value) : null;
        const fin = dateFin.value ? new Date(dateFin.value) : null;

        const rows = document.querySelectorAll("table tbody tr");

        rows.forEach(row => {
            const rowDate = new Date(row.getAttribute("data-date"));

            let afficher = true;
            if (debut && rowDate < debut) afficher = false;
            if (fin && rowDate > fin) afficher = false;

            row.style.display = afficher ? "" : "none";
        });
    }

    dateDebut.addEventListener("change", filtrerDates);
    dateFin.addEventListener("change", filtrerDates);

</script>

